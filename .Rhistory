ahrif[1] = (xn[1] * betagildi[1]) - (betagildi[1] * minmaxB[1])
ahrif[2] = (xn[2] * betagildi[2]) - (betagildi[2] * minmaxB[2])
ahrif[3] = (xn[3] * betagildi[3]) - (betagildi[3] * minmaxB[3])
ahrif[4] = (xn[4] * betagildi[4]) - (betagildi[4] * minmaxB[4])
ahrif = ts(ahrif, start=c(2006,1),end=c(2009,26),f=52)
legend("topleft",
ts.plot(ahrif,col=1:4,main="Effect of regressor variables",ylab="magnitude")
)
plot(ahrif,col=1:4,main="Effect of regressor variables",ylab="magnitude")
plot(ahrif,col=1:4,main="Effect of regressor variables",ylab=c("Season","B.mean.temp","unemployment","meadi.adstock"))
plot(ahrif,col=1:4,main="Effect of regressor variables",ylab=c("Season","B.mean.temp","unemployment","meadi.adstock"))
plot(ahrif,col=1:4,main="Effect of regressor variables",ylabels=c("Season","B.mean.temp","unemployment","meadi.adstock"))
plot(ahrif,col=1:4,main="Effect of regressor variables",y.labels=c("Season","B.mean.temp","unemployment","meadi.adstock"))
mod.bestfit<-lm(Sales ~ Media.adstock+
Unemployment.rate+
# Sol.Oslo+
# Oslo...Mean.temperature+
# Oslo...Total.precipitation+
Bergen...Mean.temperature+
# Bergen...Total.precipitation+
#Competitor.spending+
Season+
Kalendar
#Tracking.smoothed+
#na.action = na.omit
)
summary(mod.bestfit)
plot(residuals(mod.bestfit),type = 'l')
medaltal = rep(mean(residuals(mod.bestfit)),times=length(residuals(mod.bestfit)))
lines(medaltal,col=2)
legend("topleft",
c("residuals of the full model", "mean of the residuals"),
lty = 1,
col=c('black', 'red'),
cex=0.6,
lwd=4)
eps <- Sales-mod.bestfit$fit
(RMSE <- sqrt(mean(eps^2)))
# Plot the fit
plot(Sales,type='l')
lines(mod.bestfit$fit, col=2)
legend("topleft",
c("Sales data", "fitted siles data"),
lty = 1,
col=c('black', 'red'),
cex=0.6,
lwd=4)
#attached <- search()
#attached[!grepl("package", attached)]
xn  = mod.bestfit$model[2:5]  #losna vid sales model sem er stak 1
head(xn)
xn_min = apply(xn,MARGIN=2, FUN=min)
xn_max = apply(xn, MARGIN=2 , FUN=max)
minmaxB = rep(NA,length(xn))
for(i in 2:5){
if(mod.bestfit$coefficients[i] > 0){
minmaxB[i-1] = xn_min[i-1]
}
minmaxB[i-1] = xn_max[i-1]
}
else{
}
minmaxB
#betagildi = as.vector(betagildi)
(betagildi = (mod.bestfit$coefficients[2:5]))
ahrif[1] = (xn[1] * betagildi[1]) - (betagildi[1] * minmaxB[1])
ahrif[2] = (xn[2] * betagildi[2]) - (betagildi[2] * minmaxB[2])
xn  = mod.bestfit$model[2:5]  #losna vid sales model sem er stak 1
head(xn)
xn_min = apply(xn,MARGIN=2, FUN=min)
xn_max = apply(xn, MARGIN=2 , FUN=max)
minmaxB = rep(NA,length(xn))
for(i in 2:5){
if(mod.bestfit$coefficients[i] > 0){
minmaxB[i-1] = xn_min[i-1]
}
else{
minmaxB[i-1] = xn_max[i-1]
}
}
minmaxB
(betagildi = (mod.bestfit$coefficients[2:5]))
#betagildi = as.vector(betagildi)
ahrif[1] = (xn[1] * betagildi[1]) - (betagildi[1] * minmaxB[1])
ahrif[2] = (xn[2] * betagildi[2]) - (betagildi[2] * minmaxB[2])
ahrif[1] = (xn[1] * betagildi[1]) - (betagildi[1] * minmaxB[1])
BSS = read.csv("BSS.csv", header=TRUE, sep= ";",dec=",")
as.numeric.factor <- function(x) {as.numeric(levels(x))[x]}
BSS$TV.Taktisk = as.numeric.factor(BSS$TV.Taktisk)
BSS$TV.Image = as.numeric.factor(BSS$TV.Image)
BSS$Sales = as.numeric.factor(BSS$Sales)
BSS$Sol.Oslo = as.numeric.factor(BSS$Sol.Oslo)
BSS$Oslo...Mean.temperature = as.numeric.factor(BSS$Oslo...Mean.temperature)
BSS$Bergen...Mean.temperature = as.numeric.factor(BSS$Bergen...Mean.temperature)
BSS$Bergen...Total.precipitation = as.numeric.factor(BSS$Bergen...Total.precipitation)
BSS$Oslo...Total.precipitation = as.numeric.factor(BSS$Oslo...Total.precipitation)
BSS$Competitor.spending = as.numeric.factor(BSS$Competitor.spending)
BSS$Tracking = as.numeric.factor(BSS$Tracking)
BSS$Tracking.smoothed = as.numeric.factor(BSS$Tracking.smoothed)
BSS$Respons.Media = as.numeric.factor(BSS$Respons.Media)
BSS$Unemployment.rate = as.numeric.factor(BSS$Unemployment.rate)
BSS$Season = as.numeric(levels(BSS$Season)[BSS$Season])
Sales.ts = ts(data=BSS$Sales, start=c(2006,1),end=c(2009,26),f=52)
#making normal the default level
BSS = within(BSS,Kalendar <- relevel(Kalendar,ref="Normal"))
#BSS$Sales = ts(data=BSS$Sales, start =c(2006,1),end=c(2009,26),f=52)
attach(BSS)
detach(BSS)
detach()
attach(BSS)
detach()
detach()
detach()
attach(BSS)
adstock<-function(X,a){
Y<-rep(NA, length(X))
Y[1]<-X[1]
for (i in 2:length(X)){
Y[i]<-X[i]+a*Y[i-1]
}
return(Y)
}
BSS$print.adstock<-adstock(BSS$Print,.35)
BSS$InStore.adstock<-adstock(BSS$InStore,.1)
BSS$DirectMarketing.adstock<-adstock(BSS$DirectMarketing,.25)
BSS$RADIO.adstock<-adstock(BSS$RADIO,.4)
BSS$TV.Taktisk.adstock<-adstock(BSS$TV.Taktisk,.65)
BSS$TV.Image.adstock<-adstock(BSS$TV.Image,.65)
BSS$InStore.adstock<-adstock(BSS$InStore,.1)
BSS$DirectMarketing.adstock<-adstock(BSS$DirectMarketing,.25)
BSS$RADIO.adstock<-adstock(BSS$RADIO,.4)
BSS$TV.Taktisk.adstock<-adstock(BSS$TV.Taktisk,.65)
BSS$TV.Image.adstock<-adstock(BSS$TV.Image,.65)
BSS$Media.adstock<-(BSS$print.adstock+BSS$InStore.adstock
+BSS$DirectMarketing.adstock+BSS$RADIO.adstock
+BSS$TV.Taktisk.adstock+BSS$TV.Image.adstock)
plot(BSS$print.adstock,type="l",col=1)
lines(BSS$Print, col=2)
legend("topleft",
c("Print.adstock", "Print"),
lty = 1,
col=c('black', 'red'),
cex=0.6,
lwd=4)
plot(BSS$InStore.adstock,type="l",col=1)
lines(BSS$InStore, col=2)
legend("topleft",
c("InStore.adstock", "InStore"),
lty = 1,
col=c('black', 'red'),
cex=0.6,
lwd=4)
plot(BSS$DirectMarketing.adstock,type="l",col=1)
lines(BSS$DirectMarketing, col=2)
legend("topleft",
c("DirectMarketing.adstock", "DirectMarketing"),
lty = 1,
col=c('black', 'red'),
cex=0.6,
lwd=4)
plot(BSS$RADIO.adstock,type="l",col=1)
lines(BSS$RADIO, col=2)
legend("topleft",
c("RADIO.adstock", "RADIO"),
lty = 1,
col=c('black', 'red'),
cex=0.6,
lwd=4)
plot(BSS$TV.Taktisk.adstock,type="l",col=1)
lines(BSS$TV.Taktisk, col=2)
legend("topleft",
c("TV.Taktisk.adstock", "TV.Taktisk"),
lty = 1,
col=c('black', 'red'),
cex=0.6,
lwd=4)
plot(BSS$TV.Image.adstock,type="l",col=1)
lines(BSS$TV.Image, col=2)
legend("topleft",
c("TV.Image.adstock","TV.image"),
lty = 1,
col=c('black', 'red'),
cex=0.6,
lwd=4)
plot(BSS$Media.adstock,type="l",col=1)
lines(BSS$Respons.Media, col=2)
legend("topleft",
c("Media.adstock","Respons.Media"),
lty = 1,
col=c('black', 'red'),
cex=0.6,
lwd=4)
detach(BSS)
attach(BSS)
#TASK 4
# Modeling
layout(1:2)
ccf(Sales,Sol.Oslo,lag.max=52)
ccf(Sales,Oslo...Mean.temperature,lag.max=52)
ccf(Sales,Oslo...Total.precipitation,lag.max=52)# little correlation, remove from model
ccf(Sales,Bergen...Mean.temperature,lag.max=52)
ccf(Sales,Bergen...Total.precipitation,lag.max=52)
ccf(Sales, Unemployment.rate, lag.max=52)
ccf(Sales, Competitor.spending)
layout(1:1)
plot(ts(Sol.Oslo,start=c(2006,1),end=c(2009,26),f=52) ,type='l')
mod.bestfit<-lm(Sales ~ Media.adstock+
Unemployment.rate+
# Sol.Oslo+
# Oslo...Mean.temperature+
# Oslo...Total.precipitation+
Bergen...Mean.temperature+
# Bergen...Total.precipitation+
#Competitor.spending+
Season+
Kalendar
#Tracking.smoothed+
#na.action = na.omit
)
summary(mod.bestfit)
plot(residuals(mod.bestfit),type = 'l')
medaltal = rep(mean(residuals(mod.bestfit)),times=length(residuals(mod.bestfit)))
lines(medaltal,col=2)
legend("topleft",
c("residuals of the full model", "mean of the residuals"),
lty = 1,
col=c('black', 'red'),
cex=0.6,
lwd=4)
eps <- Sales-mod.bestfit$fit
(RMSE <- sqrt(mean(eps^2)))
# Plot the fit
xn  = mod.bestfit$model[2:5]  #losna vid sales model sem er stak 1
head(xn)
xn_min = apply(xn,MARGIN=2, FUN=min)
xn_max = apply(xn, MARGIN=2 , FUN=max)
minmaxB = rep(NA,length(xn))
for(i in 2:5){
if(mod.bestfit$coefficients[i] > 0){
minmaxB[i-1] = xn_min[i-1]
}
else{
minmaxB[i-1] = xn_max[i-1]
}
}
minmaxB
}
(betagildi = (mod.bestfit$coefficients[2:5]))
#betagildi = as.vector(betagildi)
ahrif[1] = (xn[1] * betagildi[1]) - (betagildi[1] * minmaxB[1])
ahrif = NA
ahrif[1] = (xn[1] * betagildi[1]) - (betagildi[1] * minmaxB[1])
ahrif[2] = (xn[2] * betagildi[2]) - (betagildi[2] * minmaxB[2])
ahrif[3] = (xn[3] * betagildi[3]) - (betagildi[3] * minmaxB[3])
ahrif[4] = (xn[4] * betagildi[4]) - (betagildi[4] * minmaxB[4])
ahrif = ts(ahrif, start=c(2006,1),end=c(2009,26),f=52)
plot(ahrif,col=1:4,main="Effect of regressor variables",y.labels=c("Season","B.mean.temp","unemployment","meadi.adstock"))
plot(ahrif,col=1:4,main="Effect of regressor variables",y.labels=c("Season","B.mean.temp","unemployment","meadi.adstock"))
ts.plot(ahrif[1])
dim(ahrif)
ahrif = xn
ahrif[1] = (xn[1] * betagildi[1]) - (betagildi[1] * minmaxB[1])
ahrif[2] = (xn[2] * betagildi[2]) - (betagildi[2] * minmaxB[2])
ahrif[3] = (xn[3] * betagildi[3]) - (betagildi[3] * minmaxB[3])
ahrif[4] = (xn[4] * betagildi[4]) - (betagildi[4] * minmaxB[4])
ahrif = ts(ahrif, start=c(2006,1),end=c(2009,26),f=52)
plot(ahrif,col=1:4,main="Effect of regressor variables",y.labels=c("Season","B.mean.temp","unemployment","meadi.adstock"))
legend("topleft",
c("media.adstock","unemployment.rate","bergen mean temp","Season"),
lty = 1,
col=1:4,
cex=0.6,
lwd=4)
ts.plot(ahrif,col=1:4,main="Effect of regressor variables",y.labels=c("Season","B.mean.temp","unemployment","meadi.adstock"))
ts.plot(ahrif,col=1:4,main="Effect of regressor variables",y.labels=c("Season","B.mean.temp","unemployment","meadi.adstock"))
names(xn)
rename(ahrif,c("Unemployment.rate"="unempoy.rate","Bergen...Mean.temperature"="Bergen.mean.temp"))
names(ahrif)[names(ahrif)=="Unemployment.rate"] <-"unempoy.rate"
names(ahrif)[names(ahrif)=="Bergen...Mean.temperature"] <-"Bergen.mean.temp"
plot(ahrif,col=1:4,main="Effect of regressor variables",y.labels=c("Season","B.mean.temp","unemployment","meadi.adstock"))
names(ahrif)
names(ahrif)
names(ahrif)
ahrif = ts(ahrif, start=c(2006,1),end=c(2009,26),f=52)
names(ahrif)[names(ahrif)=="Unemployment.rate"] <-"unempoy.rate"
names(ahrif)[names(ahrif)=="Bergen...Mean.temperature"] <-"Bergen.mean.temp"
names(ahrif)
ahrif = ts(ahrif, start=c(2006,1),end=c(2009,26),f=52)
names(ahrif)
ahrif = xn
names(ahrif)
ahrif[1] = (xn[1] * betagildi[1]) - (betagildi[1] * minmaxB[1])
ahrif[2] = (xn[2] * betagildi[2]) - (betagildi[2] * minmaxB[2])
ahrif[3] = (xn[3] * betagildi[3]) - (betagildi[3] * minmaxB[3])
ahrif[4] = (xn[4] * betagildi[4]) - (betagildi[4] * minmaxB[4])
ahrif = ts(ahrif, start=c(2006,1),end=c(2009,26),f=52)
names(ahrif)
name(ahrif)
ahrif = xn
ahrif[1] = (xn[1] * betagildi[1]) - (betagildi[1] * minmaxB[1])
ahrif[2] = (xn[2] * betagildi[2]) - (betagildi[2] * minmaxB[2])
ahrif[3] = (xn[3] * betagildi[3]) - (betagildi[3] * minmaxB[3])
ahrif[4] = (xn[4] * betagildi[4]) - (betagildi[4] * minmaxB[4])
ahrif = ts(ahrif, start=c(2006,1),end=c(2009,26),f=52)
ahrif = xn
ahrif[1] = (xn[1] * betagildi[1]) - (betagildi[1] * minmaxB[1])
ahrif[2] = (xn[2] * betagildi[2]) - (betagildi[2] * minmaxB[2])
ahrif[3] = (xn[3] * betagildi[3]) - (betagildi[3] * minmaxB[3])
ahrif[4] = (xn[4] * betagildi[4]) - (betagildi[4] * minmaxB[4])
plot(ahrif,col=1:4,main="Effect of regressor variables",y.labels=c("Season","B.mean.temp","unemployment","meadi.adstock"))
ts.plot(ahrif,col=1:4,main="Effect of regressor variables",y.labels=c("Season","B.mean.temp","unemployment","meadi.adstock"))
xn  = mod.bestfit$model[2:5]  #losna vid sales model sem er stak 1
head(xn)
xn_min = apply(xn,MARGIN=2, FUN=min)
xn_max = apply(xn, MARGIN=2 , FUN=max)
minmaxB = rep(NA,length(xn))
for(i in 2:5){
if(mod.bestfit$coefficients[i] > 0){
minmaxB[i-1] = xn_min[i-1]
}
else{
minmaxB[i-1] = xn_max[i-1]
}
}
(betagildi = (mod.bestfit$coefficients[2:5]))
#betagildi = as.vector(betagildi)
ahrif = xn
ahrif[1] = (xn[1] * betagildi[1]) - (betagildi[1] * minmaxB[1])
ahrif[2] = (xn[2] * betagildi[2]) - (betagildi[2] * minmaxB[2])
ahrif[3] = (xn[3] * betagildi[3]) - (betagildi[3] * minmaxB[3])
ahrif[4] = (xn[4] * betagildi[4]) - (betagildi[4] * minmaxB[4])
ahrif = ts(ahrif, start=c(2006,1),end=c(2009,26),f=52)
names(ahrif)
class(ahrif)
ahrif = xn
class(ahrif)
names(ahrif)
ahrif[1] = (xn[1] * betagildi[1]) - (betagildi[1] * minmaxB[1])
names(ahrif)
ahrif[2] = (xn[2] * betagildi[2]) - (betagildi[2] * minmaxB[2])
names(ahrif)
ahrif[3] = (xn[3] * betagildi[3]) - (betagildi[3] * minmaxB[3])
names(ahrif)
ahrif[4] = (xn[4] * betagildi[4]) - (betagildi[4] * minmaxB[4])
names(ahrif)
names(ahrif)[names(ahrif)=="Unemployment.rate"] <-"unempoy.rate"
names(ahrif)[names(ahrif)=="Bergen...Mean.temperature"] <-"Bergen.mean.temp"
names(ahrif)
ahrif = ts(ahrif, start=c(2006,1),end=c(2009,26),f=52)
plot(ahrif,col=1:4,main="Effect of regressor variables",y.labels=c("Season","B.mean.temp","unemployment","meadi.adstock"))
ahrif = xn
ahrif[1] = (xn[1] * betagildi[1]) - (betagildi[1] * minmaxB[1])
ahrif[2] = (xn[2] * betagildi[2]) - (betagildi[2] * minmaxB[2])
ahrif[3] = (xn[3] * betagildi[3]) - (betagildi[3] * minmaxB[3])
ahrif[4] = (xn[4] * betagildi[4]) - (betagildi[4] * minmaxB[4])
names(ahrif)[names(ahrif)=="Unemployment.rate"] <-"unempoy.rate"
names(ahrif)[names(ahrif)=="Bergen...Mean.temperature"] <-"Bergen.temp"
ahrif = ts(ahrif, start=c(2006,1),end=c(2009,26),f=52)
plot(ahrif,col=1:4,main="Effect of regressor variables",y.labels=c("Season","B.mean.temp","unemployment","meadi.adstock"))
setwd("~/GitHub/Time_series_project4")
sat.data <- read.csv("Satelliteorbit.csv")
sat.data <- read.csv("Satelliteorbit.csv")
plot(sat.data)
plot(sat.data,type='l',col=2,lwd=3)
ts.plot(sat.data,type='l',col=2,lwd=3)
class(sat.data)
names(sat.data)
sat.data
sat.data <- read.csv("Satelliteorbit.csv",header=FALSE,sep=',',dec='.')
ts.plot(sat.data,type='l',col=2,lwd=3)
sat.data
sat.data <- read.csv("Satelliteorbit.csv",header=FALSE)
sat
sat.data
sat.data <- read.csv("Satelliteorbit.csv",header=FALSE)
sat.data
sat.data$V1[2] = sat.data$V2[2]
sat.data$V2[2] = sat.data$V3[2]
sat.data
sat.data$V3 = NULL
sat.data
ts.plot(sat.data,type='l',col=2,lwd=3)
sat.data <- read.csv("Satelliteorbit.csv",header=FALSE,col.names=c("rm","theta_m"))
sat.data$rm[2] = sat.data$theta_m[2]
sat.data$theta_m[2] = sat.data$V3[2]
sat.data$V3 = NULL
ts.plot(sat.data,type='l',col=2,lwd=3)
plot(sat.data,type='l',col=2,lwd=3)
sat.data
sat.data <- read.csv("Satelliteorbit.csv",header=FALSE,col.names=c("rm","theta_m","V3"))
sat.data$rm[2] = sat.data$theta_m[2]
sat.data$theta_m[2] = sat.data$V3[2]
sat.data$V3 = NULL
sat.data
plot(y = sat.data$rm * sin(sat.data$theta_m),
x = sat.data$rm * cos(sat.data$theta_m),type='l',col=2,lwd=3)
plot(y = sat.data$rm * sin(sat.data$theta_m),
x = sat.data$rm * cos(sat.data$theta_m),
type='l',
col=2,
lwd=3,
ylab = "y",
xlab = "x")
plot(y = sat.data$rm * sin(sat.data$theta_m),
x = sat.data$rm * cos(sat.data$theta_m),
type='l',
col=2,
lwd=3,
ylab = "y",
xlab = "x",
main = "Satellite measurement data")
grid()
sat.dat <- read.csv("Satelliteorbit.csv",header=FALSE,col.names=c("rm","theta_m","V3"))
sat.dat$rm[2] = sat.dat$theta_m[2]
sat.dat$theta_m[2] = sat.dat$V3[2]
sat.dat$V3 = NULL
plot(y = sat.dat$rm * sin(sat.dat$theta_m),
x = sat.dat$rm * cos(sat.dat$theta_m),
type='l',
col=2,
lwd=3,
ylab = "y",
xlab = "x",
main = "Satellite measurement data")
grid()
set.seed(1213)
erf <- function(x) 2 * pnorm(x * sqrt(2)) - 1
plot(erf(1))
plot(erf(2))
plot(erf(1:2))
plot(erf(1:100))
require(graphics)
dnorm(0) == 1/sqrt(2*pi)
dnorm(1) == exp(-1/2)/sqrt(2*pi)
dnorm(1) == 1/sqrt(2*pi*exp(1))
## Using "log = TRUE" for an extended range :
par(mfrow = c(2,1))
plot(function(x) dnorm(x, log = TRUE), -60, 50,
main = "log { Normal density }")
curve(log(dnorm(x)), add = TRUE, col = "red", lwd = 2)
mtext("dnorm(x, log=TRUE)", adj = 0)
mtext("log(dnorm(x))", col = "red", adj = 1)
plot(function(x) pnorm(x, log.p = TRUE), -50, 10,
main = "log { Normal Cumulative }")
curve(log(pnorm(x)), add = TRUE, col = "red", lwd = 2)
mtext("pnorm(x, log=TRUE)", adj = 0)
mtext("log(pnorm(x))", col = "red", adj = 1)
require(graphics)
sat.dat <- read.csv("Satelliteorbit.csv",header=FALSE,col.names=c("rm","theta_m","V3"))
sat.dat$rm[2] = sat.dat$theta_m[2]
sat.dat$theta_m[2] = sat.dat$V3[2]
sat.dat$V3 = NULL
plot(y = sat.dat$rm * sin(sat.dat$theta_m),
x = sat.dat$rm * cos(sat.dat$theta_m),
type='l',
col=2,
lwd=3,
ylab = "y",
xlab = "x",
main = "Satellite measurement data")
layout(1)
plot(y = sat.dat$rm * sin(sat.dat$theta_m),
x = sat.dat$rm * cos(sat.dat$theta_m),
type='l',
col=2,
lwd=3,
ylab = "y",
xlab = "x",
main = "Satellite measurement data")
grid()
error_r =  rnorm(n=500,,mean=0,sd=1)
error_r =  rnorm(n=500,mean=0,sd=1)
plot(error_r,type='l')
length(sat.dat)
dim(sat.dat)
error_r =  rnorm(n=50,mean=0,sd=500^2)
error_theta = rnorm(n=50,mean=0,sd=0.005^2)
error_angular = rnorm(n=50,mean=0,sd=0.005^2)
plot(err)
plot(error_r,type='l')
plot(error_angular,type='l')
plot(error_theta, type='l')
x = 1:3
x
dim(x)
mdat <- matrix(c(1,2,3, 11,12,13), nrow = 2, ncol = 3, byrow = TRUE,
dimnames = list(c("row1", "row2"),
c("C.1", "C.2", "C.3")))
mdat
A = matrix(c(1,0,0, 0,1,1, 0,0,1),nrow=3,ncol=3,byrow=TRUE,dimnames.
dimnames = list(c("row1", "row2"),
c("C.1", "C.2", "C.3")))
A = matrix(c(1,0,0, 0,1,1, 0,0,1),nrow=3,ncol=3,byrow=TRUE,
dimnames = list(c("row1", "row2"),
c("C.1", "C.2", "C.3")))
A = matrix(c(1,0,0, 0,1,1, 0,0,1),nrow=3,ncol=3,byrow=TRUE,
dimnames = list(c("row1", "row2","row3"),
c("C.1", "C.2", "C.3")))
A
C = matrix(c(1,0,0),nrow=3,ncol=1,byrow=TRUE)
C
sqrt(2)
R_earth = 6.371E3
R_earth
R_earth = 6.371*10^6
R_earth = 6.371E6
R_earth
R_earth = 6.371E6 # fengid af google
r = R_earth + sat.dat$rm[1]
r
g_orbit = 9.81*(R_earth/r)^2
v_orbit = sqrt(r*g_orbit)
